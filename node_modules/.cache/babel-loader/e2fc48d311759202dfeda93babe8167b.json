{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Developer/Portfolio MIT/Formik/src/App.js\";\nimport { Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const signupForm = () => {\n  //   const form = useFormik({\n  //     initialValues: {\n  //       email: \"\",\n  //       password: \"\",\n  //     },\n  //     onSubmit: () => {\n  //       alert(\"Login Successful\");\n  //     },\n  //     validate: (values) => {\n  //       const errors = {};\n  //       if (!values.email) {\n  //         errors.email = \"field required\";\n  //       }\n  //       if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n  //         errors.email = \"Username should be an email\";\n  //       }\n  //       if (!values.password) {\n  //         errors.password = \"field required\";\n  //       }\n  //       return errors;\n  //     },\n  //   });\n  //   return form;\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\"\n      },\n      onSubmit: async values => {\n        await new Promise(r => setTimeout(r, 500));\n        alert(JSON.stringify(values, null, 2));\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"firstName\",\n          name: \"firstName\",\n          placeholder: \"Jane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"lastName\",\n          name: \"lastName\",\n          placeholder: \"Doe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"jane@acme.com\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Field","Form","Formik","React","App","firstName","lastName","email","values","Promise","r","setTimeout","alert","JSON","stringify"],"sources":["/Users/rafael/Developer/Portfolio MIT/Formik/src/App.js"],"sourcesContent":["import { Field, Form, Formik } from \"formik\";\nimport React from \"react\";\n\nfunction App() {\n  // const signupForm = () => {\n  //   const form = useFormik({\n  //     initialValues: {\n  //       email: \"\",\n  //       password: \"\",\n  //     },\n  //     onSubmit: () => {\n  //       alert(\"Login Successful\");\n  //     },\n  //     validate: (values) => {\n  //       const errors = {};\n  //       if (!values.email) {\n  //         errors.email = \"field required\";\n  //       }\n  //       if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n  //         errors.email = \"Username should be an email\";\n  //       }\n  //       if (!values.password) {\n  //         errors.password = \"field required\";\n  //       }\n\n  //       return errors;\n  //     },\n  //   });\n\n  //   return form;\n  // };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n        }}\n        onSubmit={async (values) => {\n          await new Promise((r) => setTimeout(r, 500));\n          alert(JSON.stringify(values, null, 2));\n        }}\n      >\n        <Form>\n          <label htmlFor=\"firstName\">First Name</label>\n          <Field id=\"firstName\" name=\"firstName\" placeholder=\"Jane\" />\n\n          <label htmlFor=\"lastName\">Last Name</label>\n          <Field id=\"lastName\" name=\"lastName\" placeholder=\"Doe\" />\n\n          <label htmlFor=\"email\">Email</label>\n          <Field\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"jane@acme.com\"\n            type=\"email\"\n          />\n          <button type=\"submit\">Submit</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,QAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EAEA,oBACE;IAAA,uBACE,QAAC,MAAD;MACE,aAAa,EAAE;QACbC,SAAS,EAAE,EADE;QAEbC,QAAQ,EAAE,EAFG;QAGbC,KAAK,EAAE;MAHM,CADjB;MAME,QAAQ,EAAE,MAAOC,MAAP,IAAkB;QAC1B,MAAM,IAAIC,OAAJ,CAAaC,CAAD,IAAOC,UAAU,CAACD,CAAD,EAAI,GAAJ,CAA7B,CAAN;QACAE,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;MACD,CATH;MAAA,uBAWE,QAAC,IAAD;QAAA,wBACE;UAAO,OAAO,EAAC,WAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,KAAD;UAAO,EAAE,EAAC,WAAV;UAAsB,IAAI,EAAC,WAA3B;UAAuC,WAAW,EAAC;QAAnD;UAAA;UAAA;UAAA;QAAA,QAFF,eAIE;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE,QAAC,KAAD;UAAO,EAAE,EAAC,UAAV;UAAqB,IAAI,EAAC,UAA1B;UAAqC,WAAW,EAAC;QAAjD;UAAA;UAAA;UAAA;QAAA,QALF,eAOE;UAAO,OAAO,EAAC,OAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF,eAQE,QAAC,KAAD;UACE,EAAE,EAAC,OADL;UAEE,IAAI,EAAC,OAFP;UAGE,WAAW,EAAC,eAHd;UAIE,IAAI,EAAC;QAJP;UAAA;UAAA;UAAA;QAAA,QARF,eAcE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAdF;MAAA;QAAA;QAAA;QAAA;MAAA;IAXF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD;;KA7DQJ,G;AA+DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}