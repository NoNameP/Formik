{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Developer/Portfolio MIT/Formik/src/App.js\";\nimport { Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const signupForm = () => {\n  //   const form = useFormik({\n  //     initialValues: {\n  //       email: \"\",\n  //       password: \"\",\n  //     },\n  //     onSubmit: () => {\n  //       alert(\"Login Successful\");\n  //     },\n  //     validate: (values) => {\n  //       const errors = {};\n  //       if (!values.email) {\n  //         errors.email = \"field required\";\n  //       }\n  //       if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n  //         errors.email = \"Username should be an email\";\n  //       }\n  //       if (!values.password) {\n  //         errors.password = \"field required\";\n  //       }\n  //       return errors;\n  //     },\n  //   });\n  //   return form;\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: () => {\n        alert(\"Login Successful\");\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = \"Field required\";\n        }\n\n        if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = \"Username should be an email\";\n        }\n\n        if (!values.password) {\n          errors.password = \"Field required\";\n        }\n\n        return errors;\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"emailField\",\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"pswField\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Field","Form","Formik","React","App","email","password","alert","values","errors","test"],"sources":["/Users/rafael/Developer/Portfolio MIT/Formik/src/App.js"],"sourcesContent":["import { Field, Form, Formik } from \"formik\";\nimport React from \"react\";\n\nfunction App() {\n  // const signupForm = () => {\n  //   const form = useFormik({\n  //     initialValues: {\n  //       email: \"\",\n  //       password: \"\",\n  //     },\n  //     onSubmit: () => {\n  //       alert(\"Login Successful\");\n  //     },\n  //     validate: (values) => {\n  //       const errors = {};\n  //       if (!values.email) {\n  //         errors.email = \"field required\";\n  //       }\n  //       if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n  //         errors.email = \"Username should be an email\";\n  //       }\n  //       if (!values.password) {\n  //         errors.password = \"field required\";\n  //       }\n\n  //       return errors;\n  //     },\n  //   });\n\n  //   return form;\n  // };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        onSubmit={() => {\n          alert(\"Login Successful\");\n        }}\n        validate={(values) => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = \"Field required\";\n          }\n          if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = \"Username should be an email\";\n          }\n          if (!values.password) {\n            errors.password = \"Field required\";\n          }\n\n          return errors;\n        }}\n      >\n        <Form>\n          <label>Email</label>\n          <Field id=\"emailField\" name=\"email\" type=\"email\" />\n          <label>Password</label>\n          <Field id=\"pswField\" name=\"password\" />\n          <button type=\"submit\">Submit</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,QAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EAEA,oBACE;IAAA,uBACE,QAAC,MAAD;MACE,aAAa,EAAE;QACbC,KAAK,EAAE,EADM;QAEbC,QAAQ,EAAE;MAFG,CADjB;MAKE,QAAQ,EAAE,MAAM;QACdC,KAAK,CAAC,kBAAD,CAAL;MACD,CAPH;MAQE,QAAQ,EAAGC,MAAD,IAAY;QACpB,MAAMC,MAAM,GAAG,EAAf;;QACA,IAAI,CAACD,MAAM,CAACH,KAAZ,EAAmB;UACjBI,MAAM,CAACJ,KAAP,GAAe,gBAAf;QACD;;QACD,IAAI,CAAC,2CAA2CK,IAA3C,CAAgDF,MAAM,CAACH,KAAvD,CAAL,EAAoE;UAClEI,MAAM,CAACJ,KAAP,GAAe,6BAAf;QACD;;QACD,IAAI,CAACG,MAAM,CAACF,QAAZ,EAAsB;UACpBG,MAAM,CAACH,QAAP,GAAkB,gBAAlB;QACD;;QAED,OAAOG,MAAP;MACD,CArBH;MAAA,uBAuBE,QAAC,IAAD;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,KAAD;UAAO,EAAE,EAAC,YAAV;UAAuB,IAAI,EAAC,OAA5B;UAAoC,IAAI,EAAC;QAAzC;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE,QAAC,KAAD;UAAO,EAAE,EAAC,UAAV;UAAqB,IAAI,EAAC;QAA1B;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IAvBF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD;;KAhEQL,G;AAkET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}